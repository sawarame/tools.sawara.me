<div id="password_app">
    <h1><?= $this->translate('Password generator', 'password') ?></h1>
    <hr/>
    <p>
        <?= $this->translate('Enter the information of password to below form and click submit button, generate password automatically as you like.', 'password') ?>
    </p>

    <form v-on:submit="submit">
        <div class="form-group">
            <label class="form-label" for="noc"><?= $this->translate('Number of characters', 'password') ?></label>
            <input type="text" name="noc" class="form-control"
                v-bind:class="{'is-invalid': messages.noc}"
                v-model="formValues.noc" />
            <div v-if="messages.noc" class="invalid-feedback">
                <div v-for="(message, key) in messages.noc" :key="key">
                    <p>{{message}}</p>
                </div>
            </div>
        </div>
        <div class="form-group">
            <label class="form-label" for="nop"><?= $this->translate('Number of passwords to create', 'password') ?></label>
            <input type="text" name="nop" class="form-control"
                v-bind:class="{'is-invalid': messages.nop}"
                v-model="formValues.nop" />
            <div v-if="messages.nop" class="invalid-feedback">
                <div v-for="(message, key) in messages.nop" :key="key">
                    <p>{{message}}</p>
                </div>
            </div>
        </div>
        <div class="form-group">
            <label class="form-label" for="exc"><?= $this->translate('Exclude characters', 'password') ?></label>
            <input type="text" name="exc" class="form-control"
                v-bind:class="{'is-invalid': messages.exc}"
                v-model="formValues.exc" />
            <div v-if="messages.exc" class="invalid-feedback">
                <div v-for="(message, key) in messages.exc" :key="key">
                    <p>{{message}}</p>
                </div>
            </div>
        </div>
        <div class="form-group form-check">
            <input type="checkbox" name="dsc" id="dsc" value="1" class="form-check-input" v-model="formValues.dsc">
            <label class="orm-check-label" for="dsc"><?= $this->translate('Do not use same charactor', 'password') ?></label>
        </div>
        <button type="submit" class="btn btn-primary mb-2"><?= $this->translate('Submit', 'date') ?></button>
    </form>


    <div v-if="password">
        <hr />
        <div class="form-group" v-for="(items, key) in password" :key="key">
            <div v-if="key == 'graph'">
                <label><?= $this->translate('Use printing characters, excluding space.', 'password') ?></label>
            </div>
            <div v-if="key == 'alnum'">
                <label><?= $this->translate('Use alphabet and digits.', 'password') ?></label>
            </div>
            <div v-if="key == 'alpha'">
                <label><?= $this->translate('Use alphabet only.', 'password') ?></label>
            </div>
            <textarea readonly
                class="form-control"
                v-bind:rows="items.length"
            >{{items.join('\n')}}</textarea>
        </div>
    </div>
</div>

<?php $this->inlineScript()->captureStart(); ?> // <script>
    var passwordApp = new Vue({
        el: '#password_app',
        data () {
            return {
                messages: <?= json_encode($messages) ?>,
                formValues: <?= json_encode($formValues) ?>,
                password: <?= json_encode($password) ?>,
            }
        },
        methods: {
            submit: function () {event.preventDefault();
                const url = new URL(location.href);
                for (const [key, value] of Object.entries(this.formValues)) {
                    url.searchParams.set(key, value);
                }
                history.pushState(null, null, url.toString());
                this.fetchPassword(url);
            },
            fetchPassword: function (url) {
                url.searchParams.set('ajax', 1);
                axios.get(url.toString()).then(function(response) {
                    passwordApp.messages = response.data.messages;
                    passwordApp.password = response.data.password;
                });
            },
        },
        mounted () {
            window.addEventListener("popstate", function() {
                const url = new URL(location.href);
                const params = url.searchParams;
                passwordApp.formValues.noc = params.get('noc')? params.get('noc'): 16;
                passwordApp.formValues.nop = params.get('nop')? params.get('nop'): 3;
                passwordApp.formValues.exc = params.get('exc');
                passwordApp.formValues.dsc = params.get('dsc') !== null?
                    (params.get('dsc') == 'false'? false: true): true;
                passwordApp.fetchPassword(url);
            });
        },

    });
// </script><?php $this->inlineScript()->captureEnd(); ?>
